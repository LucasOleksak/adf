{
	"name": "SystembolagetAdresses",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SystembolagetStores",
						"type": "DatasetReference"
					},
					"name": "SystembolagetAdresses"
				},
				{
					"linkedService": {
						"referenceName": "DataLake",
						"type": "LinkedServiceReference"
					},
					"name": "WineCalculations"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "DataLake",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "JoinWineWithSystembolagetAdresses"
				},
				{
					"name": "SortOnWeight"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     item as string ('bonnet'),",
				"     workspace as string ('validwines')",
				"}",
				"source(output(",
				"          ID as string,",
				"          Butiksnamn as string,",
				"          Adress as string,",
				"          Postnummer as string,",
				"          Ort as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SystembolagetAdresses",
				"source(output(",
				"          Store as string,",
				"          {Store group} as string,",
				"          Profile as string,",
				"          Shop_Segment_Diff as double,",
				"          Trend as double,",
				"          Precent_of_whole_volume as double,",
				"          Weight as double",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'validwines',",
				"     folderPath: 'reports/latest',",
				"     fileName: (concat($item, '.csv')),",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> WineCalculations",
				"WineCalculations derive(ID = regexExtract(Store, '(\\\\d+)')) ~> derivedColumn1",
				"SystembolagetAdresses, derivedColumn1 join(SystembolagetAdresses@ID == derivedColumn1@ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWineWithSystembolagetAdresses",
				"JoinWineWithSystembolagetAdresses sort(asc(Weight, true),",
				"     partitionBy('hash', 1)) ~> SortOnWeight",
				"SortOnWeight select(mapColumn(",
				"          Butiksnamn,",
				"          Adress,",
				"          Postnummer,",
				"          Ort,",
				"          {Store group},",
				"          Profile,",
				"          Shop_Segment_Diff,",
				"          Trend,",
				"          Precent_of_whole_volume,",
				"          Weight",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'validwines',",
				"     folderPath: 'reports/latest',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:[(concat($item, 'full', '.csv'))],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     header: (['Butik', 'Street', 'Zipcode', 'City', 'Segment', 'Profile', 'Shop_Segment_Diff', 'Trend', 'Precent_of_whole_volume', 'Weight' ]),",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}